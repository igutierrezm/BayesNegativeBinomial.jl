var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = BayesNegativeBinomial","category":"page"},{"location":"#BayesNegativeBinomial","page":"Home","title":"BayesNegativeBinomial","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BayesNegativeBinomial.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BayesNegativeBinomial]","category":"page"},{"location":"#BayesNegativeBinomial.Sampler","page":"Home","title":"BayesNegativeBinomial.Sampler","text":"Sampler(y::Vector{Int}, X::Matrix{Float64}; kwargs...)\n\nInitialize a Gibbs Sampler for the following Bayesian Negative-Binomial model:\n\nbeginaligned\ny_i  x_i beta\nsim \ntextNegativeBinomial(r_0 Lambda(x_ibeta))\n\nLambda(x_ibeta)\n=\n1  (1 + e^- x_ibeta)\n\nbeta \nsim \nmathcalN(m_0 Sigma_0)\nendaligned\n\ngiven a response vector y and a design matrix X. This constructor does not  copy any of its arguments. Hence, for example, if y[1] is changed, it will  affect the Gibbs sampler.\n\nKeyword arguments\n\nβ = zeros(size(X, 2)): current state of beta.\nΣ0 = 10 * I(size(X, 2)): Sigma_0.\nm0 = zeros(size(X, 2)): m_0.\nr0 = [1]: r_0.\n\nExample\n\njulia> using Random, Distributions\njulia> rng = MersenneTwister(1)\njulia> X = randn(rng, 100, 2)\njulia> y = rand(rng, 0:2, 10)\njulia> s = BayesNegativeBinomial.Sampler(y, X)\n\n\n\n\n\n","category":"type"},{"location":"#BayesNegativeBinomial.sample-Tuple{Random.AbstractRNG, BayesNegativeBinomial.Sampler}","page":"Home","title":"BayesNegativeBinomial.sample","text":"sample(rng::AbstractRNG, s::BayesNegativeBinomial.Sampler; kwargs...)\n\nDraw a posterior sample using the Gibbs sampler s,  following Polson et al. (2013).    \n\nArguments\n\nmcmcsize = 2000: the total number of MCMC iterations.\nburnin = 1000: the number of burn-in iterations.\n\nExample\n\njulia> using Random                 \njulia> rng = MersenneTwister(1)     \njulia> X = randn(rng, 100, 2)\njulia> y = rand(rng, 0:2, 10)        \njulia> s = BayesNegativeBinomial.Sampler(y, X)        \njulia> chain = BayesNegativeBinomial.sample(rng, s)\n\nReferences\n\nPolson, N., Scott, J. & Windle, J. (2013) Bayesian inference for logistic   models using Pólya–Gamma latent variables, Journal of the American   Statistical Association, 108:504, 1339-1349,  https://doi.org/10.1080/01621459.2013.829001.    \n\n\n\n\n\n","category":"method"},{"location":"#BayesNegativeBinomial.step!-Tuple{Random.AbstractRNG, BayesNegativeBinomial.Sampler}","page":"Home","title":"BayesNegativeBinomial.step!","text":"step!(rng::AbstractRNG, mdl::BayesNegativeBinomial.Sampler)\n\nPerform 1 iteration of the Gibbs sampler s, following Polson et al. (2013).\n\nExample\n\njulia> using Random, Distributions\njulia> rng = MersenneTwister(1)\njulia> X = randn(rng, 100, 2)\njulia> y = rand(rng, 0:2, 10)\njulia> s = BayesNegativeBinomial.Sampler(y, X)\njulia> BayesNegativeBinomial.step!(rng, s)\n\nReferences\n\nPolson, N., Scott, J. & Windle, J. (2013) Bayesian inference for logistic   models using Pólya–Gamma latent variables, Journal of the American   Statistical Association, 108:504, 1339-1349,  https://doi.org/10.1080/01621459.2013.829001.\n\n\n\n\n\n","category":"method"}]
}
